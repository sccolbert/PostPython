#-----------------------------------------------------------------------------
# POSTPython Iterator Module
#
#
#-----------------------------------------------------------------------------


# The `Iterator` protocol.
#
# An `Iterator` is an object that can be used in a `for...in` construct.
#
# It's role is produce a stream of values from the underlying collection.
protocol Iterator[T]:
	
	# Iterators themselves must be `Iterable`.
	#
	# Typically, an iterator will return itself.
	def __iter__() -> Iterator[T]: ...

	# Get the next element from the iterator.
	#
	# When the iterator is exhausted, it will always return `None`.
	def __next__() -> Option[T]: ...


# The `Iterable` protocal
#
# An `Iterable` is an object that can be used in a `for...in` construct.
#
# It's role is to produce the `Iterator` that will be consumed by the runtime.
protocol Iterable[T]:
	
	# Produce the `Iterator` object for the underlying collection.
	def __iter__() -> Iterator[T]: ...

