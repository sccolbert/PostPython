#-----------------------------------------------------------------------------
# POSTPython Vector Module
#
#
#-----------------------------------------------------------------------------


# 
class Vector[T]:
	# The current number of elements in the vector.
	readonly length: Uint64

	# The internal memory storage for the vector.
	_memory: Memory[T]

	# Default constructor.
	def __init__() -> None:
		# TODO Implement
		pass

	# Copy constructor.
	def __init__(other: Vector[T]) -> None:
		# TODO Implement
		pass

	# Sequence constructor.
	def __init__(sequence: Sequence[T]) -> None:
		# TODO Implement
		pass

	# Iterable constructor.
	def __init__(iterable: Iterable[T]) -> None:
		# TODO Implement
		pass

	# Retrieve an element from the vector.
	def __getitem___(index: Uint64) -> T:
		# TODO Implement
		pass

	# Set an element in the vector.
	def __setitem__(index: Uint64, value: T) -> None:
		# TODO Implement
		pass

	# Clear the contents of the vector and set its `length` to `zero`.
	def clear() -> None:
		# TODO Implement
		pass

	# Add an element to the end of the vector.
	def push(value: T) -> None:
		# TODO Implement
		pass
	
	def insert(index: Uint64, value: T) -> T:
		# TODO Implement
		pass

	def pop() -> T:
		# TODO Implement
		pass

	def extend(sequence: Sequence[T]) -> None:
		# TODO Implement
		pass
	
	def extend(iterable: Iterable[T]) -> None:
		# TODO Implement
		pass

	def splice(index: Uint64, Sequence[T]) -> None:
		# TODO Implement
		pass

	def splice(index: Uint64, Iterable[T]) -> None:
		# TODO Implement
		pass

